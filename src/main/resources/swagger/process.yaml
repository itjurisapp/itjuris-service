swagger: '2.0'
info:
  version: 0.0.5
  title: Core API
  description: 'Service IT Juris.'
  contact:
    name: Alisson da Cruz Souza - Java Developer
    email: alissoncruz.si@gmail.com
host: itjuris-api.test.com.br
basePath: /api/itjuris/v1
schemes:
  - https
consumes:
  - application/json
produces:
  - application/json
paths:
  /process:
    post:
      tags:
        - Process
      summary: Create new process
      description: 'Create new process.'
      operationId: createProcess
      produces:
        - application/json
      parameters:
        - in: body
          name: newProcess
          description: data new Process
          required: true
          schema:
            $ref: '#/definitions/Process'
      responses:

        '201':
          description: Create new resource
          schema:
            $ref: '#/definitions/ProcessCode'
        '401':
          description: Authorization Failed
          schema:
            $ref: '#/definitions/ErrorModel'
        '404':
          description: Document not found
          schema:
            $ref: '#/definitions/ErrorModel'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorModel'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/ErrorModel'
      security:
        - OauthSecurity:
            - "bearer"
    get:
      tags:
        - Process
      summary: Gets all processos
      description: 'get a processos'
      operationId: getProcessos
      produces:
        - application/json
      security:
        - OauthSecurity:
            - bearer

      responses:
        '200':
          description: Ok
          schema:
            $ref: '#/definitions/ResponseProcess'
        '401':
          description: Authorization Failed
          schema:
            $ref: '#/definitions/ErrorModel'
        '404':
          description: Document not found
          schema:
            $ref: '#/definitions/ErrorModel'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorModel'
        default:
          description: Unexpected Error
          schema:
            $ref: '#/definitions/ErrorModel'
  /process/{number}:
    get:
      tags:
        - Process
      summary: Gets a Process
      description: 'get a Process'
      operationId: getProcess
      produces:
        - application/json
      security:
        - OauthSecurity:
            - bearer
      parameters:
        - name: number
          in: path
          description: Process number
          required: true
          type: string
          x-example: '000001'
      responses:
        '200':
          description: Ok
          schema:
            $ref: '#/definitions/ResponseProcess'
        '401':
          description: Authorization Failed
          schema:
            $ref: '#/definitions/ErrorModel'
        '404':
          description: Document not found
          schema:
            $ref: '#/definitions/ErrorModel'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorModel'
        default:
          description: Unexpected Error
          schema:
            $ref: '#/definitions/ErrorModel'


    put:
      tags:
        - Process
      summary: Update a Process
      description: 'get a Process'
      operationId: updateProcess
      produces:
        - application/json
      security:
        - OauthSecurity:
            - bearer
      parameters:
        - name: number
          in: path
          description: Process number
          required: true
          type: string
          x-example: 'XPTO'
        - name: Process
          in: body
          description: Process date
          required: true
          schema:
            $ref: '#/definitions/UpdateProcess'
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorModel'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorModel'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/ErrorModel'
        '422':
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/ErrorModel'
        '500':
          description: Internal error
          schema:
            $ref: '#/definitions/ErrorModel'
        default:
          description: Unexpected Error
          schema:
            $ref: '#/definitions/ErrorModel'

  /basicDatas:
    post:
      tags:
        - Basic Datas
      summary: Create new basicDatas
      description: 'Create new basicDatas.'
      operationId: createBasicDatas
      produces:
        - application/json
      parameters:
        - in: body
          name: newBasicDatas
          description: data new basicDatas
          required: true
          schema:
            $ref: '#/definitions/BasicDatas'
      responses:

        '201':
          description: Create new resource
          schema:
            $ref: '#/definitions/BasicDatasCode'
        '401':
          description: Authorization Failed
          schema:
            $ref: '#/definitions/ErrorModel'
        '404':
          description: Document not found
          schema:
            $ref: '#/definitions/ErrorModel'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorModel'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/ErrorModel'
      security:
        - OauthSecurity:
            - "bearer"
    get:
      tags:
        - Basic Datas
      summary: Gets all BasicDatas
      description: 'get a BasicDatas'
      operationId: getbasicDatasos
      produces:
        - application/json
      security:
        - OauthSecurity:
            - bearer

      responses:
        '200':
          description: Ok
          schema:
            $ref: '#/definitions/ResponseBasicDatas'
        '401':
          description: Authorization Failed
          schema:
            $ref: '#/definitions/ErrorModel'
        '404':
          description: Document not found
          schema:
            $ref: '#/definitions/ErrorModel'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorModel'
        default:
          description: Unexpected Error
          schema:
            $ref: '#/definitions/ErrorModel'
  /basicDatas/{number}:
    get:
      tags:
        - Basic Datas
      summary: Gets a basicDatas
      description: 'get a basicDatas'
      operationId: getBasicDatas
      produces:
        - application/json
      security:
        - OauthSecurity:
            - bearer
      parameters:
        - name: number
          in: path
          description: basicDatas number
          required: true
          type: string
          x-example: '000001'
      responses:
        '200':
          description: Ok
          schema:
            $ref: '#/definitions/ResponseBasicDatas'
        '401':
          description: Authorization Failed
          schema:
            $ref: '#/definitions/ErrorModel'
        '404':
          description: Document not found
          schema:
            $ref: '#/definitions/ErrorModel'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorModel'
        default:
          description: Unexpected Error
          schema:
            $ref: '#/definitions/ErrorModel'
    put:
      tags:
        - Basic Datas
      summary: Update a basicDatas
      description: 'get a basicDatas'
      operationId: updateBasicDatas
      produces:
        - application/json
      security:
        - OauthSecurity:
            - bearer
      parameters:
        - name: number
          in: path
          description: basicDatas number
          required: true
          type: string
          x-example: 'XPTO'
        - name: basicDatas
          in: body
          description: basicDatas date
          required: true
          schema:
            $ref: '#/definitions/UpdateBasicDatas'
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorModel'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorModel'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/ErrorModel'
        '422':
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/ErrorModel'
        '500':
          description: Internal error
          schema:
            $ref: '#/definitions/ErrorModel'
        default:
          description: Unexpected Error
          schema:
            $ref: '#/definitions/ErrorModel'
    delete:
      tags:
        - Basic Datas
      summary: Update a basicDatas
      description: 'get a basicDatas'
      operationId: deleteBasicDatas
      produces:
        - application/json
      security:
        - OauthSecurity:
            - bearer
      parameters:
        - name: number
          in: path
          description: basicDatas number
          required: true
          type: string
          x-example: 'XPTO'
        - name: basicDatas
          in: body
          description: basicDatas date
          required: true
          schema:
            $ref: '#/definitions/UpdateBasicDatas'
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorModel'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorModel'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/ErrorModel'
        '422':
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/ErrorModel'
        '500':
          description: Internal error
          schema:
            $ref: '#/definitions/ErrorModel'
        default:
          description: Unexpected Error
          schema:
            $ref: '#/definitions/ErrorModel'

securityDefinitions:
  OauthSecurity:
    type: oauth2
    flow: accessCode
    authorizationUrl: 'https://sandbox-api.exemple.com.br/security/iam/v1/user-identities/login'
    tokenUrl: 'https://sandbox-api.exemple.com.br/security/iam/v1/user-identities/login'
    scopes:
      bearer: Client authorization token - Bearer JWT
security:
  - OauthSecurity:
      - bearer

definitions:

  BasicDatas:
    description: Object Process
    type: object

    properties:
      proceduralClass:
        type: integer
        example: 123
        description: class of Process
      codeLocation:
        type: integer
        example: 123
        description: Name of Process
      competence:
        type: integer
        example: 123
        description: Name of Process
      linkedProcess:
        type: string
        example: cnj
        description: Name of Process
      BindingProcessModality:
        type: string
        example: cnj
        description: Name of Process
      priority:
        type: string
        example: cnj
        description: Name of Process
      lawsuitValue:
        type: integer
        example: cnj
        description: Name of Process
      legalAssistance:
        type: boolean
        example: true
        description: Name of Process
      secrecyLevel:
        type: integer
        example: cnj
        description: Name of Process
      dateAjuizamento:
        type: string
        example: cnj
        description: Name of Process
      otherParameter:
        type: string
        example: cnj
        description: Name of Process


  UpdateBasicDatas:
    description: Object Process
    type: object
    properties:
      proceduralClass:
        type: integer
        example: 123
        description: Name of Process
      codeLocation:
        type: integer
        example: 123
        description: Name of Process
      competence:
        type: integer
        example: 123
        description: Name of Process
      linkedProcess:
        type: string
        example: cnj
        description: Name of Process
      BindingProcessModality:
        type: string
        example: cnj
        description: Name of Process
      priority:
        type: string
        example: cnj
        description: Name of Process
      lawsuitValue:
        type: integer
        example: cnj
        description: Name of Process
      legalAssistance:
        type: boolean
        example: true
        description: Name of Process
      secrecyLevel:
        type: integer
        example: cnj
        description: Name of Process
      dateAjuizamento:
        type: string
        example: cnj
        description: Name of Process
      otherParameter:
        type: string
        example: cnj
        description: Name of Process

  Process:
    description: Object Process
    type: object
    required:
      - name
      - description
    properties:
      number:
        type: string
        example: string
        description: Name of Process
      part:
        type: string
        example: string
        description: Name of Process
      description:
        type: string
        example: string
        description: Name of Process
      date:
        type: string
        format: date-time
        example: yyyy-mm-dd
        description: Start Date of the validity of the Process.
      user:
        type: string
        example: 000001
        description: Unique identifier of the User
      category:
        type: string
        example: Category
        description: Unique identifier of the Category



  ResponseProcess:
    type: object
    required:
      - Process
    properties:
      Process:
        type: array
        items:
          $ref: '#/definitions/ProcessResponse'

  ResponseBasicDatas:
    type: object
    required:
      - BasicDatas
    properties:
      BasicDatas:
        type: array
        items:
          $ref: '#/definitions/BasicDatasResponse'

  BasicDatasResponse:
    description: Object Process
    type: object
    properties:
      proceduralClass:
        type: integer
        example: 123
        description: Name of Process
      codeLocation:
        type: integer
        example: 123
        description: Name of Process
      competence:
        type: integer
        example: 123
        description: Name of Process
      linkedProcess:
        type: string
        example: cnj
        description: Name of Process
      BindingProcessModality:
        type: string
        example: cnj
        description: Name of Process
      priority:
        type: string
        example: cnj
        description: Name of Process
      lawsuitValue:
        type: integer
        example: cnj
        description: Name of Process
      legalAssistance:
        type: boolean
        example: true
        description: Name of Process
      secrecyLevel:
        type: integer
        example: cnj
        description: Name of Process
      dateAjuizamento:
        type: string
        example: cnj
        description: Name of Process
      otherParameter:
        type: string
        example: cnj
        description: Name of Process

  ProcessResponse:
    description: Process data
    type: object
    properties:
      code:
        type: string
        example: 123
        description: Name of the Process
      name:
        type: string
        example: pencil
        description: Name of the Process
      description:
        type: string
        example: write
        description: Name of the Process
      date:
        type: string
        format: date-time
        example: yyyy-mm-dd
        description: Start Date of the validity of the Process.
      user:
        type: string
        example: 000001
        description: Unique identifier of the User
      category:
        type: string
        example: Category
        description: Unique identifier of the Category


  UpdateProcess:
    description: Process data
    type: object
    required:
      - name
      - description
      - price
      - startDate
      - endDate
      - status
    properties:
      name:
        type: string
        example: string
        description: Name of the Process
      description:
        type: string
        example: string
        description: Name of the Process
      price:
        type: number
        example: 59.90
        minimum: 0
        exclusiveMinimum: true
        description: Total value available for the Process.
      date:
        type: string
        format: date
        example: yyyy-mm-dd
        description: Start Date of the validity of the Process.
      user:
        type: string
        example: 000001
        description: Unique identifier of the User
      category:
        type: string
        example: Category
        description: Unique identifier of the Category

  ErrorModel:
    type: object
    required:
      - codeBuilderComplete
      - message
    properties:
      code:
        type: string
      message:
        type: string



  BasicDatasCode:
    description: Process data

  ProcessCode:
    description: Process data
    type: object
    required:
      - code
    properties:
      code:
        type: string
        example: EX-000001
        description: Unique identifier of the Process